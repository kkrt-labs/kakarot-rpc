[package]
name = "kakarot-rpc"
version = "0.1.0"
edition = "2021"
authors = [
  "Abdelhamid Bakhta <@abdelhamidbakhta>",
  "Elias Tazartes <@eikix>",
  "Clement Walter <@clementwalter>",
  "Gregory Edison <@greged93>",
  "Johann Bestowrous <@jobez>",
  "Harsh Bajpai <@bajpai244>",
  "Danilo Kim <@danilowhk>",
]
description = "RPC node for the Kakarot zk EVM"
homepage = "https://github.com/kkrt-labs"
repository = "https://github.com/kkrt-labs/kakarot-rpc"
readme = "./README.md"
license = "MIT"

[lints]
rust.missing_debug_implementations = "warn"
rust.unreachable_pub = "warn"
rustdoc.all = "warn"
rust.unused_must_use = "deny"
rust.rust_2018_idioms = "deny"

[lints.clippy]
# These are some of clippy's nursery (i.e., experimental) lints that we like.
# By default, nursery lints are allowed. Some of the lints below have made good
# suggestions which we fixed. The others didn't have any findings, so we can
# assume they don't have that many false positives. Let's enable them to
# prevent future problems.
branches_sharing_code = "warn"
clear_with_drain = "warn"
derive_partial_eq_without_eq = "warn"
empty_line_after_outer_attr = "warn"
equatable_if_let = "warn"
imprecise_flops = "warn"
iter_on_empty_collections = "warn"
iter_with_drain = "warn"
large_stack_frames = "warn"
manual_clamp = "warn"
mutex_integer = "warn"
needless_pass_by_ref_mut = "warn"
nonstandard_macro_braces = "warn"
or_fun_call = "warn"
path_buf_push_overwrite = "warn"
read_zero_byte_vec = "warn"
redundant_clone = "warn"
suboptimal_flops = "warn"
suspicious_operation_groupings = "warn"
trailing_empty_array = "warn"
trait_duplication_in_bounds = "warn"
transmute_undefined_repr = "warn"
trivial_regex = "warn"
tuple_array_conversions = "warn"
uninhabited_references = "warn"
unused_peekable = "warn"
unused_rounding = "warn"
useless_let_if_seq = "warn"

# These are nursery lints which have findings. Allow them for now. Some are not
# quite mature enough for use in our codebase and some we don't really want.
# Explicitly listing should make it easier to fix in the future.
as_ptr_cast_mut = "allow"
cognitive_complexity = "allow"
collection_is_never_read = "allow"
debug_assert_with_mut_call = "allow"
empty_line_after_doc_comments = "allow"
fallible_impl_from = "allow"
future_not_send = "allow"
iter_on_single_items = "allow"
missing_const_for_fn = "allow"
needless_collect = "allow"
non_send_fields_in_send_ty = "allow"
option_if_let_else = "allow"
redundant_pub_crate = "allow"
significant_drop_in_scrutinee = "allow"
significant_drop_tightening = "allow"
string_lit_as_bytes = "allow"
type_repetition_in_bounds = "allow"
unnecessary_struct_initialization = "allow"
use_self = "allow"

[dependencies]
# Starknet dependencies
cainome = { git = "https://github.com/cartridge-gg/cainome.git", tag = "v0.2.5", default-features = false, features = [
  "abigen-rs",
] }
cairo-lang-starknet = { version = "2.5.4", default-features = false }
ef-testing = { git = "https://github.com/kkrt-labs/ef-tests.git", rev = "e215eb2", default-features = false, features = [
  "v0",
], optional = true }
starknet = { version = "0.9.0", default-features = false }
starknet-crypto = { version = "0.6.1", default-features = false }
starknet_api = { version = "0.7.0-dev.0", default-features = false }

# Ethereum dependencies
alloy-primitives = "0.7.0"
alloy-rlp = { version = "0.3.4", default-features = false }
ethers = { version = "2.0.9", default-features = false }
ethers-solc = { version = "2.0.9", default-features = false }
jsonrpsee = { version = "0.21.0", features = ["macros", "server"] }
reth-primitives = { git = "https://github.com/paradigmxyz/reth.git", tag = "v0.2.0-beta.6", default-features = false, features = [
  "arbitrary",
] }
reth-rpc-types = { git = "https://github.com/paradigmxyz/reth.git", tag = "v0.2.0-beta.6", default-features = false }
reth-rpc-types-compat = { git = "https://github.com/paradigmxyz/reth.git", tag = "v0.2.0-beta.6", default-features = false }
reth-revm = { git = "https://github.com/paradigmxyz/reth.git", tag = "v0.2.0-beta.6", default-features = false }

# Serde
serde = { version = "1.0.198", default-features = false, features = ["derive"] }
serde_json = { version = "1.0.115", default-features = false }
serde_with = { version = "2.3.1", default-features = false }

# Others
anyhow = { version = "1.0.82", default-features = false }
async-trait = { version = "0.1.80", default-features = false }
auto_impl = { version = "1.1.0", default-features = false }
bytes = { version = "1.6.0", default-features = false }
dotenvy = { version = "0.15.7", default-features = false }
env_logger = { version = "0.11.3", default-features = false }
eyre = { version = "0.6.12", default-features = false }

foundry-config = { git = "https://github.com/foundry-rs/foundry", branch = "master" }
futures = { version = "0.3.30", default-features = false }
hex = { version = "0.4.3", default-features = false }
itertools = { version = "0.12.1", default-features = false }
lazy_static = { version = "1.4.0", default-features = false }
log = { version = "0.4.21", default-features = false }
mongodb = { version = "2.8.2", default-features = false, features = [
  "tokio-runtime",
] }
rayon = { version = "1.10.0", default-features = false, optional = true }
reqwest = { version = "0.12.3", default-features = false }
rstest = { version = "0.19.0", default-features = false }

testcontainers = { version = "0.15.0", default-features = false, optional = true }
thiserror = { version = "1.0.58", default-features = false }
tokio = { version = "1.37.0", features = ["macros"] }
tokio-util = { version = "0.7.10", features = [
  "codec",
], default-features = false, optional = true }
tokio-stream = { version = "0.1.15", default-features = false, optional = true }
tower = { version = "0.4.13", default-features = false }
tower-http = { version = "0.4.4", default-features = false }
tracing = { version = "0.1.40", default-features = false }
tracing-subscriber = { version = "0.3.18", features = ["env-filter"] }
url = { version = "2.5.0", default-features = false }
walkdir = { version = "2.5.0", default-features = false }
rand = { version = "0.8.5", default-features = false, optional = true }

# Prometheus
governor = { version = "0.6.0", default-features = false, features = ["std"] }
prometheus = { version = "0.13.0", default-features = false }
hyper = { version = "0.14.16", default-features = false }
pin-project-lite = { version = "0.2", default-features = false }


# In order to use dojo-test-utils, we need to explicitly declare the same patches as them in our Cargo.toml
# Otherwise, underlying dependencies of dojo will not be patched and we will get a compilation error
# see https://github.com/dojoengine/dojo/issues/563
# When making changes to the rev, please also update to make file to the same rev in the `install-katana` rule.
dojo-test-utils = { git = 'https://github.com/dojoengine/dojo', tag = "v0.6.0-alpha.6", default-features = false }
katana-core = { git = 'https://github.com/dojoengine/dojo', tag = "v0.6.0-alpha.6", features = [
  "messaging",
] }
katana-primitives = { git = 'https://github.com/dojoengine/dojo', tag = "v0.6.0-alpha.6", default-features = false, features = [
  "serde",
] }
arbitrary = { version = "1", features = ["derive"] }

[patch."https://github.com/starkware-libs/blockifier"]
blockifier = { git = "https://github.com/dojoengine/blockifier", rev = "d38b979" }

[patch.crates-io]
cairo-felt = { git = "https://github.com/dojoengine/cairo-rs.git", rev = "1031381" }
cairo-vm = { git = "https://github.com/dojoengine/cairo-rs.git", rev = "1031381" }
# we patch starknet_api because the version v0.7.0-rc.0 was removed from crates.io
# we need v0.7.0-rc.0 to be compatible with dojo.
starknet_api = { git = "https://github.com/starkware-libs/starknet-api.git", tag = "v0.7.0-rc.0" }

[dev-dependencies]
rstest = { version = "0.19.0", default-features = false }
toml = { version = "0.8.12", default-features = false }

[features]
testing = [
  "testcontainers",
  "rayon",
  "ef-testing",
  "tokio-util",
  "tokio-stream",
  "rand",
]
hive = []
arbitrary = ["rand"]

[[bin]]
name = "katana_genesis"
required-features = ["testing"]

[[bin]]
name = "hive_genesis"
required-features = ["testing"]

[[bin]]
name = "hive_chain"
required-features = ["testing"]
