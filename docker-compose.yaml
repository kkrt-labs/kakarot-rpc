version: '3.2'

services:
  starknet:
    image: ghcr.io/keep-starknet-strange/madara:v0.1.0.experimental.3
    ports:
      - '9615:9615'
      - '9944:9944'
      - '30333:30333'
    command:
      - '--rpc-external'
      - '--rpc-methods=unsafe'
      - '--rpc-cors=all'
      - '--dev'
    networks:
      - internal

  kakarot-deployer:
    image: ghcr.io/kkrt-labs/kakarot/deployer:latest
    environment:
      - ACCOUNT_ADDRESS=0x3
      - PRIVATE_KEY=0x00c1cf1490de1352865301bb8705143f3ef938f97fdf892f1090dcb5ac7bcd1d
      # Custom RPC URL for docker
      - RPC_URL=http://starknet:9944
      - EVM_PRIVATE_KEY=0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80
    volumes:
      # Since STARKNET_NETWORK is not set, deployments will be saved without network folder
      - deployments:/app/kakarot/deployments
    depends_on:
      starknet:
        condition: service_healthy
    restart: on-failure
    networks:
      - internal

  deployments-parser:
    image: apteno/alpine-jq:2023-07-24
    # Parse deployments and save the result to .env file
    entrypoint:
      - '/bin/sh'
      - '-c'
      # First line overrides an existing .env, if any.
      # This is to make sure that it is clean even though docker volume was not cleaned.
      - |
        echo "KAKAROT_ADDRESS=$(jq -r '.kakarot.address' /deployments/deployments.json)" > /deployments/.env;
        echo "PROXY_ACCOUNT_CLASS_HASH=$(jq -r '.proxy' /deployments/declarations.json)" >> /deployments/.env
    volumes:
      - deployments:/deployments
    depends_on:
      kakarot-deployer:
        condition: service_completed_successfully

  kakarot-rpc:
    image: ghcr.io/kkrt-labs/kakarot-rpc/node:latest
    ports:
      - 3030:3030
    environment:
      - KAKAROT_HTTP_RPC_ADDRESS=0.0.0.0:3030
      - STARKNET_NETWORK=http://starknet:9944
      - RUST_LOG=trace
    volumes:
      # Mount the volume on workdir and use .env stored in root of the volume
      - deployments:/usr/src/app
    depends_on:
      deployments-parser:
        condition: service_completed_successfully
    restart: on-failure
    networks:
      - internal

networks:
  internal:

volumes:
  deployments:
