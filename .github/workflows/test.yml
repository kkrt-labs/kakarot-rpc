name: test

on:
  workflow_dispatch:
  workflow_call:

jobs:
  check:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true
      - uses: Swatinem/rust-cache@v2
      - uses: actions-rs/cargo@v1
        with:
          command: check

  fmt:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true
          components: rustfmt
      - uses: Swatinem/rust-cache@v2
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true
          components: clippy
      - uses: Swatinem/rust-cache@v2
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --workspace --all-features --all-targets -- -D warnings

  test:
    runs-on: ubuntu-latest-16-cores
    timeout-minutes: 30
    steps:
      # rust setup
      - uses: actions/checkout@v3
      - name: Setup rust env
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          components: llvm-tools-preview
          override: true
      - name: Retrieve cached dependencies
        uses: Swatinem/rust-cache@v2
      - name: Setup coverage env
        uses: taiki-e/install-action@cargo-llvm-cov
      # nextest setup
      - uses: taiki-e/install-action@cargo-llvm-cov
      - uses: taiki-e/install-action@nextest
      # Load dump
      - name: Load dump
        uses: actions/download-artifact@v3
        with:
          name: dump-katana
      # Load lib submodules
      - name: Load submodules
        id: cached-submodules
        uses: actions/cache/restore@v3
        with:
          path: ./lib/
          key: ${{ runner.os }}-submodules
      - name: Generate code coverage
        run: ./scripts/make_with_env.sh test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: lcov.info
          fail_ci_if_error: false
